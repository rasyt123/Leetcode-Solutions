{"id":584419667,"lang":"cpp","time":"3Â months","timestamp":1636448977,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/584419667/","is_pending":"Not Pending","title":"Subarray Product Less Than K","memory":"N/A","code":"class Solution {\npublic:\n    int numSubarrayProductLessThanK(vector<int>& nums, int k) {\n        /*\n        We use two pointers \n        one l pointer and one r pointer\n        \n        l and r start at the front of the list \n        \n  product = 0      \n  while l or r are less than the list size \n        if the product is greater than k or r is greater than the length of nums ;\n            increment l by 1\n            set r = l\n            reset the product \n            product = 0; \n        \n        \n        if the size of l - r is zero and the current item is less than k\n            we add one to the counter \n        otherwise \n            keep multiplying whatever is at the l pointer by what is at the right pointer\n            and set that to be the product \n            \n        increment r by 1         \n        */\n        \n    }\n};","compare_result":null,"title_slug":"subarray-product-less-than-k"}