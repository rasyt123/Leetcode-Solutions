{"id":557757755,"lang":"cpp","time":"4 months, 3 weeks","timestamp":1632095722,"status_display":"Accepted","runtime":"525 ms","url":"/submissions/detail/557757755/","is_pending":"Not Pending","title":"Longest Increasing Subsequence","memory":"10.9 MB","code":"class Solution {\npublic:\n    int lengthOfLIS(vector<int>& nums) {\n\n        int result;\n        int ans = INT_MIN;\n        vector<int> dp(nums.size(), 0);\n        result = findls(0, nums, dp, ans);\n        if (ans == INT_MIN) {\n            return 1;\n        }\n        return ans;\n\n    }\n\n\n    int findls(int index, vector<int>& nums, vector<int>& dp, int& ans) {\n        int maximum = INT_MIN;\n        int length;\n        int element;\n\n        if (index >= nums.size()) {\n            return 0;\n        }\n\n        if (dp[index] != 0) {\n            return dp[index];\n        }\n        element = nums[index];\n        for (int i = index; i < nums.size() - 1; i++) {\n            length = findls(i + 1, nums, dp, ans);\n                if ((length >= maximum and nums[i + 1] > element)) {\n                    maximum = 1 + length;\n                    ans = max(ans, maximum);\n                }\n        }\n\n        if (maximum == INT_MIN) {\n            dp[index] = 1;\n        } else {\n            dp[index] = maximum;\n        }\n        return dp[index];\n\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111","title_slug":"longest-increasing-subsequence"}