{"id":542156366,"lang":"cpp","time":"5 months, 3 weeks","timestamp":1629593575,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/542156366/","is_pending":"Not Pending","title":"Pacific Atlantic Water Flow","memory":"N/A","code":"class Solution {\npublic:\n    vector<vector<int>> pacificAtlantic(vector<vector<int>>& heights) {\n        bool pacific;\n        bool atlantic;\n        int num_rows = heights.size();\n        int num_cols = heights.at(0).size();\n        vector<int> coords;\n\n        vector<vector<int>> result;\n\n        vector<pair<int, int>> neighbors;\n        vector<vector<bool>> atlantictrue(num_rows, vector<bool>(num_cols, false));\n        vector<vector<bool>> pacifictrue(num_rows, vector<bool>(num_cols, false));\n\n\n\n        vector<bool> bothpaths{false, false};\n\n\n        for (int row = 0; row <= num_rows - 1; row++) {\n            for (int col = 0; col <= num_cols - 1; col++) {\n                vector<vector<bool>> visited(num_rows, vector<bool>(num_cols, false));\n                neighbors = buildneighbors(row, col);\n                dfs(row, col, bothpaths, visited, neighbors, heights, atlantictrue, pacifictrue);\n                if (bothpaths[0] and bothpaths[1]){\n                    coords = {row, col};\n                    result.push_back(coords);\n                    coords.clear();\n                }\n\n\n                if (bothpaths[0]) {\n                    pacifictrue[row][col] = true;\n                }\n                if (bothpaths[1]) {\n                    atlantictrue[row][col] = true;\n                }\n                bothpaths[0] = false;\n                bothpaths[1] = false;\n            }\n        }\n\n        return result;\n\n    }\n\n    vector<pair<int, int>> buildneighbors(int currow, int currcol) {\n        vector<pair<int, int>> neighbors;\n        int north = currow - 1;\n        int south = currow + 1;\n        int west = currcol - 1;\n        int east = currcol + 1;\n        neighbors = {{north, currcol}, {south, currcol}, {currow, west}, {currow, east}};\n        return neighbors;\n    }\n\n\n    bool isValid(int row, int col, vector<vector<int>>& heights) {\n        return (row >= 0 and row < heights.size()) and (col >= 0 and col < heights.at(0).size());\n    }\n\n    void dfs(int row, int col, vector<bool>& bothpaths, vector<vector<bool>>& visited, vector<pair<int, int>> neighbors, vector<vector<int>>& heights, vector<vector<bool>>& atlantictrue, vector<vector<bool>>& pacifictrue) {\n        visited[row][col] = true;\n        neighbors = buildneighbors(row, col);\n        if (row - 1 < 0 or col - 1 < 0) {\n            bothpaths[0] = true;\n        }\n\n        if (row + 1 > visited.size() - 1 or col + 1 > visited.at(0).size() - 1) {\n            bothpaths[1] = true;\n        }\n\n        if (bothpaths[0] and bothpaths[1]) {\n            return;\n        }\n\n        for (pair<int,int> items : neighbors) {\n            int row1 = items.first;\n            int col1 = items.second;\n            if (isValid(items.first, items.second, heights) and heights[items.first][items.second] <= heights[row][col] and !visited[items.first][items.second]) {\n                if (atlantictrue[items.first][items.second] and pacifictrue[items.first][items.second]) {\n                    bothpaths[0] = true;\n                    bothpaths[1] = true;\n                    return;\n                }\n                if (pacifictrue[items.first][items.second]) {\n                    bothpaths[0] = true;\n                }\n                if (atlantictrue[items.first][items.second]) {\n                    bothpaths[1] = true;\n                }\n                if (!atlantictrue[items.first][items.second] and !pacifictrue[items.first][items.second]) {\n                    dfs(items.first, items.second, bothpaths, visited, neighbors, heights, atlantictrue, pacifictrue);\n                }\n            }\n        }\n\n\n        return;\n    }\n\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111110000000000000000000000000000000000000000000","title_slug":"pacific-atlantic-water-flow"}