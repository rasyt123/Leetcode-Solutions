{"id":496775586,"lang":"cpp","time":"8 months, 3 weeks","timestamp":1621710305,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/496775586/","is_pending":"Not Pending","title":"Find All Anagrams in a String","memory":"N/A","code":"\n\nclass Solution {\npublic:\n    vector<int> findAnagrams(string s, string p) {\n        string substringz;\n        bool anagramtrue;\n        vector<int> startindices;\n        for (int i = 0; i <= s.size() - 1; i++) {\n            for (int j = 0; j <= p.size(); j++) {\n                substringz = s.substr(i, j);\n                if (p.size() == substringz.size()) {\n                    std::cout << substringz << endl;\n                    anagramtrue = AnagramChecker(p, substringz);\n                    if (anagramtrue) {\n                        startindices.push_back(i);\n                        break;\n                    } else {\n                        break;\n                    }\n                }\n            }\n        }\n        return startindices;\n    }\n\n    bool AnagramChecker(const string& original, string& subberstring);\n};\n\n\nbool Solution::AnagramChecker(const string& original, string& subberstring) {\n    bool anagramfound;\n    bool letterfound = false;\n    for (int i = 0; i < original.size(); i++) {\n        for (int j = 0; j < subberstring.size(); j++) {\n            if (original.at(i) == subberstring.at(j)) {\n                letterfound = true;\n                subberstring.at(j) = 'X';\n                break;\n            }\n        }\n        if (!letterfound) {\n            return false;\n        } else {\n            letterfound = false;\n        }\n    }\n    return true;\n}\n\n","compare_result":"111111111111111111111111111111111000000000000000000000000000","title_slug":"find-all-anagrams-in-a-string"}