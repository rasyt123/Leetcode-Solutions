{"id":552886128,"lang":"cpp","time":"5Â months","timestamp":1631330684,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/552886128/","is_pending":"Not Pending","title":"Binary Tree Maximum Path Sum","memory":"27.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\nprivate:\n    int dfs(TreeNode* root, int& maxsum) {\n        if(!root) return 0;\n        int l = max(0,dfs(root->left,maxsum));\n        int r = max(0,dfs(root->right,maxsum));\n        maxsum = max(l+r+root->val, maxsum);\n        return root->val + max(l,r);\n    }\npublic:\n    int maxPathSum(TreeNode* root) {\n        int maxsum = INT_MIN;\n        dfs(root,maxsum);\n        return maxsum;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-maximum-path-sum"}