{"id":552885932,"lang":"cpp","time":"5Â months","timestamp":1631330648,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/552885932/","is_pending":"Not Pending","title":"Binary Tree Maximum Path Sum","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n   int max_gain(TreeNode* root)\n    {\n        if(!root)return 0;\n        int l=max(max_gain(root->left),0);\n        int r=max(max_gain(root->right),0);\n        int new_price=root->val+l+r;\n        max_sum=max(max_sum,new_price);\n        return root->val+max(l,r);\n    }\n    int maxPathSum(TreeNode* root) {\n        max_gain(root);\n        return max_sum;\n    }\n    \n};","compare_result":null,"title_slug":"binary-tree-maximum-path-sum"}