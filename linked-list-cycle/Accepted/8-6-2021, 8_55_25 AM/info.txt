{"id":534289603,"lang":"cpp","time":"6Â months, 1Â week","timestamp":1628265325,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/534289603/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"8 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\n/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool hasCycle(ListNode *head) {\n        ListNode* fast=head;\n        ListNode* slow=head;\n        while(fast!=NULL && fast->next!=NULL)\n        {\n            slow = slow->next;\n            fast=fast->next->next;\n            if(slow==fast)\n            {\n                return true;\n            }\n        }\n        return false;\n    }\n};","compare_result":"11111111111111111111","title_slug":"linked-list-cycle"}