{"id":515529365,"lang":"cpp","time":"7Â months, 2Â weeks","timestamp":1625082191,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/515529365/","is_pending":"Not Pending","title":"Rotate List","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\n    private:\n\n\n    public:\n        ListNode* rotateRight(ListNode* head, int k) {\n            ListNode *Tail;\n            ListNode *Next;\n            ListNode *current = head;\n            ListNode* OldTail;\n            if (head == nullptr) {\n                return nullptr;\n            }\n            while (current != nullptr) {\n                if (current->next == nullptr) {\n                    Tail = current;\n                    OldTail = current;\n                }\n                current = current->next;\n            }\n            current = head;\n            while (k--) {\n                while (current != OldTail) {\n                    Next = current->next;\n                    current->next = nullptr;\n                    Tail->next = current;\n                    Tail = current;\n                    current = Next;\n                }\n                current = Next;\n                OldTail = Tail;\n            }\n            return current;\n        }\n    };","compare_result":"111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"rotate-list"}