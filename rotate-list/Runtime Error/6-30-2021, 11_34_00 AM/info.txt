{"id":515503324,"lang":"cpp","time":"7Â months, 2Â weeks","timestamp":1625078040,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/515503324/","is_pending":"Not Pending","title":"Rotate List","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\nprivate:\n\n\npublic:\n    ListNode* rotateRight(ListNode* head, int k) {\n        ListNode* Head = head;\n        ListNode* current = head;\n        ListNode* Tail;\n        int temp;\n        int value;\n        while (k--) {\n            value = Head->val;\n            while (current != nullptr) {\n                if (current->next == nullptr) {\n                    Tail = current;\n                    Tail->next = Head;\n                    Head->val = value;\n                    Tail->next = nullptr;\n                } else {\n                    temp = current->next->val;\n                    current->next->val = value;\n                    value = temp;\n                }\n                current = current->next;\n            }\n            current = head;\n        }\n        return head;\n    }\n};","compare_result":"111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"rotate-list"}