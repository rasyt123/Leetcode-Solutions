{"id":515533057,"lang":"cpp","time":"7 months, 2 weeks","timestamp":1625082833,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/515533057/","is_pending":"Not Pending","title":"Rotate List","memory":"11.7 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n  ListNode* rotateRight(ListNode* head, int k) {\n    ListNode *temp = head;\n    ListNode *last;\n    int length = 0;\n    while(temp!=NULL){\n      length += 1;\n      last = temp;\n      temp = temp->next;\n    }\n\n    if(length==0 || length ==1){\n      return head;\n    }\n\n    int rotateFactor = k % length;\n    int fromBegin = length - rotateFactor;\n    int count = 0;\n\n    temp = head;\n    while(count!=fromBegin-1){\n      temp = temp -> next;\n      count++;\n    }\n\n    last -> next = head;\n    head = temp -> next;\n    temp -> next = NULL;\n    return head;\n  }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"rotate-list"}