{"id":528845474,"lang":"cpp","time":"6 months, 2 weeks","timestamp":1627348730,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/528845474/","is_pending":"Not Pending","title":"Sum Root to Leaf Numbers","memory":"9.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> res;\n    void Util(TreeNode* root, int sum)\n    {\n        if(root==NULL)\n        {\n            return;\n        }\n        if(sum==0)\n        {\n            sum += root->val;\n        }\n        else\n        {\n            sum = (sum*10)+root->val;\n        }\n        if(root->left==NULL && root->right==NULL)\n                res.push_back(sum);\n        Util(root->left,sum);\n        Util(root->right,sum);\n    }\n    int sumNumbers(TreeNode* root) {\n        Util(root,0);\n        return accumulate(res.begin(),res.end(),0);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-root-to-leaf-numbers"}