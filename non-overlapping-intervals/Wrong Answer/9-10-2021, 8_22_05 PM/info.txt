{"id":552885298,"lang":"cpp","time":"5Â months","timestamp":1631330525,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/552885298/","is_pending":"Not Pending","title":"Non-overlapping Intervals","memory":"N/A","code":"class Solution {\npublic:\n    int eraseOverlapIntervals(vector<vector<int>>& intervals) {\n        if (intervals.size() == 0) {\n            return 0;\n        }\n        sort(intervals.begin(), intervals.end(), compare);\n        stack<vector<int>> interval;\n        int intervalcount = 0;\n        //intervals[0] is the previous\n        interval.push(intervals[0]);\n        for (int i = 1; i < intervals.size(); i++) {\n            if (!interval.empty()) {\n                vector<int> result = interval.top();\n                if (intervals[i][0] < result[1]) {\n                    intervalcount += 1;\n                    interval.push(intervals[i]);\n                    continue;\n                }\n            }\n            interval.push(intervals[i]);\n        }\n\n        return intervalcount;\n\n    }\n    \n    static bool compare(vector<int>v1, vector<int>v2) {\n        return (v1[0] < v2[0]) || (v1[0] == v2[0] && v1[1] > v2[1]);\n    }\n};","compare_result":"1111101111110000000000000000000000000000000000000000010000","title_slug":"non-overlapping-intervals"}