{"id":537641180,"lang":"cpp","time":"6Â months","timestamp":1628817755,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/537641180/","is_pending":"Not Pending","title":"Spiral Matrix","memory":"7 MB","code":"class Solution {\npublic:\n    vector<int> spiralOrder(vector<vector<int>>& matrix) {\n        int m = matrix.size(), n = m ? matrix[0].size() : 0, u = 0, d = m - 1, l = 0, r = n - 1, p = 0;\n        vector<int> order(m * n);\n        while (u <= d && l <= r) {\n            for (int col = l; col <= r; col++) {\n                order[p++] = matrix[u][col];\n            }\n            if (++u > d) {\n                break;\n            }\n            for (int row = u; row <= d; row++) {\n                order[p++] = matrix[row][r];\n            }\n            if (--r < l) {\n                break;\n            }\n            for (int col = r; col >= l; col--) {\n                order[p++] = matrix[d][col];\n            }\n            if (--d < u) {\n                break;\n            }\n            for (int row = d; row >= u; row--) {\n                order[p++] = matrix[row][l];\n            }\n            if (l++ > r) {\n                break;\n            }\n        }\n        return order;\n    }\n};","compare_result":"11111111111111111111111","title_slug":"spiral-matrix"}