{"id":545455414,"lang":"python3","time":"5 months, 2 weeks","timestamp":1630131425,"status_display":"Accepted","runtime":"162 ms","url":"/submissions/detail/545455414/","is_pending":"Not Pending","title":"Surrounded Regions","memory":"16.1 MB","code":"class Solution:\n    def dfs(self, i, j):\n      if i<0 or j<0 or i>=self.M or j>=self.N or self.board[i][j] != \"O\":\n          return\n      self.board[i][j] = 'T'\n      neib_list = [[i+1,j],[i-1,j],[i,j-1],[i,j+1]]\n      for x, y in neib_list:\n        self.dfs(x, y)\n    \n    def solve(self, board):\n        if not board: return 0\n        self.board, self.M, self.N = board, len(board), len(board[0])\n        \n        for i in range(0, self.M):\n            self.dfs(i,0)\n            self.dfs(i,self.N-1)\n            \n        for j in range(0, self.N):\n            self.dfs(0,j)\n            self.dfs(self.M-1,j)\n        \n        for i,j in product(range(self.M), range(self.N)):\n            board[i][j] = \"X\" if board[i][j] != \"T\" else \"O\"","compare_result":"1111111111111111111111111111111111111111111111111111111111","title_slug":"surrounded-regions"}