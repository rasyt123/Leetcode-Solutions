{"id":533406192,"lang":"cpp","time":"6 months, 1 week","timestamp":1628114766,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/533406192/","is_pending":"Not Pending","title":"Merge Sorted Array","memory":"N/A","code":"class Solution {\npublic:\n    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {\n        nums1.resize(m + n);\n\n        //loop through both arrays with different indexes\n        //\n        // should keep repeating until we've exhausted all the elements in nums2 or imd\n        //      if the element at nums2 at index j is less than or equal to nums1's index at i\n        //              shift nums1 to the right, insert element at index i\n        //              we want to increment j now;\n        //\n        //      if the element at nums2 at index j is more than index i,\n        //             increment i but dont insert any element just yet\n        //\n        if (n == 0) {\n            return;\n        }\n        int j = 0;\n        int i = 0;\n\n        while (j < nums2.size()) {\n            if (nums2[j] <= nums1[i]) {\n                for (int a = m - 1; a >= i; a--) {\n                    nums1[a + 1] = nums1[a];\n                }\n                nums1[i++] = nums2[j++];\n                ++m;\n            } else if (nums2[j] >= nums1[i] and nums1[i] == 0 and i >= nums2.size() and i < m + n) {\n                nums1[i++] = nums2[j++];\n            }else {\n                ++i;\n            }\n\n        }\n        return;\n\n\n\n    }\n};","compare_result":"11000000000000000000000000000000000000000000000000000000000","title_slug":"merge-sorted-array"}