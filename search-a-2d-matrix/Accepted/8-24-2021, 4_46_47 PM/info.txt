{"id":543685592,"lang":"cpp","time":"5 months, 2 weeks","timestamp":1629848807,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/543685592/","is_pending":"Not Pending","title":"Search a 2D Matrix","memory":"9.6 MB","code":"class Solution {\npublic:\n    bool searchMatrix(vector<vector<int>>& matrix, int target) {\n        /*\n        Binary Search Question\n\n        Looks like I need to use binary search on each of the rows\n        and check the end value with the target so I can skip\n        unecessary rows that do not need to be checked\n        */\n        int end = matrix.at(0).size() - 1;\n        int l = 0, r = matrix[0].size();\n        for (int i = 0; i < matrix.size(); i++) {\n            if (target <= matrix[i][end]) {\n                while (l <= r) {\n                    int mid = l + (r - l) / 2;\n                    if (matrix[i][mid] == target) {\n                        return true;\n                    } else if (matrix[i][mid] < target) {\n                        l = mid + 1;\n                    } else {\n                       r = mid - 1;\n                    }\n                }\n                return false;\n            }\n        }\n         return false;\n    }\n\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"search-a-2d-matrix"}