{"id":584925247,"lang":"cpp","time":"3Â months","timestamp":1636530653,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/584925247/","is_pending":"Not Pending","title":"Odd Even Linked List","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* oddEvenList(ListNode* head) {\n        /*\n        We can initailize 2 dummy linked list nodes \n        and a counter for odd or even \n        when we traverse through the linked list, if the index is even, set the next of \n            the first dummy to be the current node\n            we then go nextnext \n        \n        \n        \n        \n        \n        \n        */\n        \n    }\n};","compare_result":null,"title_slug":"odd-even-linked-list"}