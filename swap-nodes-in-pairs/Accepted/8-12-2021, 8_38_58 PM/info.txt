{"id":537688736,"lang":"cpp","time":"6Â months","timestamp":1628825938,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/537688736/","is_pending":"Not Pending","title":"Swap Nodes in Pairs","memory":"7.6 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* swapPairs(ListNode* head) {\n        /*\n            current node is\n            I need to use a fast pointer with curr->next->next so I can link the swapped pointer to the third node\n            Imagine you swapped 2 and 1 so 2 points to 1, 2 no longer pointers to 3, so this is why prev\n            curr\n       while (nextemp->next != nullptr)\n            nexttemp = prev->next->next;\n            curr = prev->next;\n            prev->next = null\n            curr->next = prev;\n            prev->next = nexttemp;\n\n\n        */\n        if (head == nullptr) {\n            return nullptr;\n        } else if (head->next == nullptr) {\n            return head;\n        }\n\n        ListNode* nexttemp = head;\n        ListNode* prev = head;\n        ListNode* curr = head->next;\n        ListNode* temp;\n        ListNode* secondcurr = curr;\n        ListNode* behind = nullptr;\n        bool first = true;\n        while (nexttemp != nullptr and nexttemp->next != nullptr) {\n            nexttemp = prev->next->next;\n            prev->next = nullptr;\n            curr->next = prev;\n            prev->next = nexttemp;\n\n\n            temp = prev;\n            prev = curr;\n            curr = temp;\n\n\n            if (first) {\n                first = false;\n            } else {\n                behind->next = prev;\n            }\n            behind = curr;\n\n            prev = prev->next->next;\n            if (curr->next == nullptr) {\n                break;\n            }\n            curr = curr->next->next;\n        }\n\n        return secondcurr;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111","title_slug":"swap-nodes-in-pairs"}