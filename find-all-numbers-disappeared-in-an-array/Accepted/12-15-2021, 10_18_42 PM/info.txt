{"id":602578694,"lang":"cpp","time":"1 month, 3 weeks","timestamp":1639635522,"status_display":"Accepted","runtime":"52 ms","url":"/submissions/detail/602578694/","is_pending":"Not Pending","title":"Find All Numbers Disappeared in an Array","memory":"33.9 MB","code":"class Solution {\npublic:\n    vector<int> findDisappearedNumbers(vector<int>& nums) {\n        /*\n        use an unordered_map that maps 1 - n with the indexes \n        with each value in the vector being \n        1 2 3 4 5 6 .. n \n        mark all the entries to be false \n        \n        iterate through nums and edit all entries from nums in that second array to be true \n        \n        iterate through the new array and for each entry that is false \n        push it to a new array and be done \n        O(n) time but not O(n) space\n        */\n        \n        vector<bool> vec(nums.size() + 1, false);\n        vector<int> resultvec;\n        for (int i = 0; i < nums.size(); i++) {\n            vec[nums[i]] = true;        \n        }\n        for (int i = 1; i < vec.size(); i++) {\n            if (vec[i] == false) {\n                resultvec.push_back(i);\n            }\n        }\n        return resultvec;\n        \n    }\n};","compare_result":"111111111111111111111111111111111","title_slug":"find-all-numbers-disappeared-in-an-array"}