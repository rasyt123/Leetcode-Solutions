{"id":536594248,"lang":"cpp","time":"6Â months","timestamp":1628649908,"status_display":"Accepted","runtime":"1540 ms","url":"/submissions/detail/536594248/","is_pending":"Not Pending","title":"Maximum Subarray","memory":"13.2 MB","code":"class Solution {\npublic:\n    int maxSubArray(vector<int>& nums) {\n        //O(n)\n\n        int k = 1;\n        int max_sum = 0;\n        int window_sum;\n        int othersum;\n        othersum = nums[0];\n\n        for (int i = 0; i < nums.size(); i++) {\n            max_sum = 0;\n            for (int j = 0; j < k; j++) {\n                max_sum += nums[j];\n            }\n            window_sum = max_sum;\n            for (int a = k; a < nums.size(); a++) {\n                window_sum += nums[a] - nums[a - k];\n                max_sum = max(max_sum, window_sum);\n                if (max_sum > othersum) {\n                    othersum = max_sum;\n                }\n\n            }\n            ++k;\n        }\n        \n        if (max_sum > othersum) {\n            othersum = max_sum;\n        }\n\n        return othersum;\n\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-subarray"}