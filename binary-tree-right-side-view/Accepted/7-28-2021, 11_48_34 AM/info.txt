{"id":529770994,"lang":"cpp","time":"6 months, 2 weeks","timestamp":1627498114,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/529770994/","is_pending":"Not Pending","title":"Binary Tree Right Side View","memory":"12.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> rightSideView(TreeNode* root) {\n        vector<int> source;\n        vector<int> levelordernodes;\n        int numlevels;\n        numlevels = maxDepth(root);\n        LevelOrderRecur(root, numlevels, source, levelordernodes);\n        return source;\n    }\n    \n    \n    int maxDepth(TreeNode* root) {\n        if(root == NULL) {\n            return 0;\n        }\n        return max(maxDepth(root->left)+1, maxDepth(root->right)+1);\n        \n    }\n    \n    void LevelOrderRight(TreeNode* root, int level, vector<int>& source, vector<int>& levelordernodes) {\n        int item;\n        if (root == nullptr) {\n            return;\n        }\n        if (level == 1) {\n            item = root->val;\n            levelordernodes.push_back(item);\n        } else {\n            LevelOrderRight(root->right, level - 1, source, levelordernodes);\n            LevelOrderRight(root->left, level - 1, source, levelordernodes);\n        }\n        \n        \n    }\n    \n    void LevelOrderRecur(TreeNode* root, int levels, vector<int>& source, vector<int>& levelordernodes) {\n        for (int i = 1; i <= levels; i++) {\n            LevelOrderRight(root, i, source, levelordernodes);\n            if (levelordernodes.size() >= 1) {\n                source.push_back(levelordernodes[0]);\n                levelordernodes.clear();\n            }\n        }\n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-right-side-view"}