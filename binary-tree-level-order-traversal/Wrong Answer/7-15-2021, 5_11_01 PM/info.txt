{"id":523194177,"lang":"cpp","time":"7Â months","timestamp":1626394261,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/523194177/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> levelOrder(TreeNode* root) {\n        vector<vector<int>> thetree;\n        if (root == nullptr) {\n            return thetree;\n        }\n        vector<int> currlevel;\n        queue<TreeNode*> q1;\n        TreeNode* current = root;  \n        q1.push(current);\n        while (!q1.empty() and current != nullptr) {\n            current = q1.front();\n            q1.pop();\n            currlevel.push_back(current->val);\n            if (q1.empty()) {\n                thetree.push_back(currlevel);\n                currlevel.clear();\n            }\n            if (current->left != nullptr) {\n                q1.push(current->left);\n            }\n            if (current->right != nullptr) {\n                q1.push(current->right);\n            }\n        }\n        return thetree;\n        \n    }\n};","compare_result":"1111110011000000000010000001000001","title_slug":"binary-tree-level-order-traversal"}