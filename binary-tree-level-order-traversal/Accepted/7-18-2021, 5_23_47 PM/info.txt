{"id":524688152,"lang":"cpp","time":"6 months, 3 weeks","timestamp":1626654227,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/524688152/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"12.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> levelOrder(TreeNode* root) {\n        vector<vector<int>> thetree;\n        if (root == nullptr) {\n            return thetree;\n        }\n        vector<int> currlevel;\n        vector<TreeNode*> children;\n        queue<TreeNode*> q1;\n        TreeNode* current = root;\n        q1.push(current);\n        while (!q1.empty() and current != nullptr) {\n            current = q1.front();\n            q1.pop();\n            if (std::find(children.begin(), children.end(), current) != children.end()) {\n                children.clear();\n                thetree.push_back(currlevel);\n                currlevel.clear();\n                currlevel.push_back(current->val);\n            } else {\n                currlevel.push_back(current->val);\n            }\n            if (current->left != nullptr) {\n                q1.push(current->left);\n                children.push_back(current->left);\n            }\n            if (current->right != nullptr) {\n                q1.push(current->right);\n                children.push_back(current->right);\n            }\n        }\n        if (q1.empty()) {\n            thetree.push_back(currlevel);\n            currlevel.clear();\n        }\n        return thetree;\n\n    }\n};\n","compare_result":"1111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal"}