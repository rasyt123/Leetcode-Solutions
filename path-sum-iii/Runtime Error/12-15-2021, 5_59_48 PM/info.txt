{"id":602480105,"lang":"cpp","time":"1 month, 3 weeks","timestamp":1639619988,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/602480105/","is_pending":"Not Pending","title":"Path Sum III","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int pathSum(TreeNode* root, int targetSum) {\n        int count = 0;\n        unordered_map<int, bool> runningsums;\n        int currsum = 0;\n        if (root->left == nullptr and root->right == nullptr) {\n            if (root->val == targetSum) {\n                return 1;\n            } else {\n                return 0;\n            }\n        }\n        dfs(root, runningsums, targetSum, count, currsum);\n        return count;\n    }\n    \n    /*\n    10 15 17 18\n    \n    */\n    \n    \n    void dfs(TreeNode* root, unordered_map<int, bool> table, int targetSum, int& count, int currsum) {\n        if (root == nullptr) {\n            return;\n        }\n        //1 - 0 \n        int newsum = currsum + root->val;\n        table[newsum] = true;\n        if (table[newsum - targetSum] or newsum - targetSum == 0) {\n            count += 1;\n        }\n        dfs(root->left, table, targetSum, count, newsum);\n        dfs(root->right, table, targetSum, count, newsum);\n    }\n};","compare_result":"110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"path-sum-iii"}