{"id":593551869,"lang":"cpp","time":"2 months, 2 weeks","timestamp":1638041799,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/593551869/","is_pending":"Not Pending","title":"Find Peak Element","memory":"N/A","code":"class Solution {\npublic:\n    int findPeakElement(vector<int>& nums) {\n        /*\n        1 2 3 4 5 7 6\n        0 1 2 3 4 5 6 \n        \n        6 10 5 4 3 2 1\n        \n        \n        1 4 3 5 6 7 8 9 \n        0 1 2 3 4 5 6 7\n        \n        2 binary searches = log (n) time \n        \n        log(n)\n        starting from the mid:\n            if it is a peak:\n                return the peak\n            if the element that is right next to it is greater than curr:\n                look to left \n            otherwise\n                look to the rigjt \n         \n            \n        log(n)\n        starting from the mid:\n            if it is a peak:\n                return the peak:\n            if the element that is the right is greater than curr:\n                look to the right\n            otherwise \n                look to the left \n        */\n        int l = 0;\n        int r = nums.size() - 1;\n        int m;\n        while (l < r) {\n            m = l + (r - l) / 2;\n            if (nums[m] > nums[m - 1] and nums[m] > nums[m + 1]) {\n                return m;\n            } else if (nums[m - 1] > nums[m]) {\n                r = m;\n            } else {\n                l = m + 1;\n       }\n    }\n        int l1 = 0;\n        int l2 = nums.size() - 1;\n        int mid;\n        while (l1 < l2) {\n            mid = l1 + (l2 - l1) / 2;\n            if (nums[mid] > nums[mid - 1] and nums[mid] > nums[mid + 1]) {\n                return mid;\n            } else if (nums[mid] > nums[mid + 1]) {\n                l2 = mid;\n            } else {\n                l1 = mid + 1;\n            }\n        }\n        return m;\n            \n        \n    }\n};","compare_result":"110000000000000000000000000000000000000000000000000000000000000","title_slug":"find-peak-element"}