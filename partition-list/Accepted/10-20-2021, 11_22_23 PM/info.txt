{"id":574743393,"lang":"cpp","time":"3 months, 3 weeks","timestamp":1634797343,"status_display":"Accepted","runtime":"10 ms","url":"/submissions/detail/574743393/","is_pending":"Not Pending","title":"Partition List","memory":"10.2 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* partition(ListNode* head, int x) {\n        /*\n        all nodes less than x\n        all nodes equal to x\n        all nodes greater than x\n        */\n        ListNode* l1 = head;\n\n        ListNode* dum2 = new ListNode;\n        ListNode* head2 = dum2;\n\n\n        ListNode* dum4 = new ListNode;\n        ListNode* head4 = dum4;\n\n        while (l1 != nullptr) {\n            if (l1->val < x) {\n                dum2->next = l1;\n                dum2 = dum2->next;\n            } else if (l1->val >= x) {\n                dum4->next = l1;\n                dum4 = dum4->next;\n            }\n            l1 = l1->next;\n        }\n        dum4->next = nullptr;\n        dum2->next = head4->next;\n        return head2->next;\n\n\n\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"partition-list"}