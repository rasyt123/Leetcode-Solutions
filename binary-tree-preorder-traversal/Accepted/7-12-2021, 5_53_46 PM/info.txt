{"id":521593897,"lang":"cpp","time":"7Â months","timestamp":1626137626,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/521593897/","is_pending":"Not Pending","title":"Binary Tree Preorder Traversal","memory":"8.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> preorderTraversal(TreeNode* root) {\n        stack<TreeNode*> s1;\n        vector<int> bintree;\n        if (root == nullptr) {\n            return bintree;\n        }\n        s1.push(root);\n        while (!s1.empty()) {\n            root = s1.top();\n            s1.pop();\n            bintree.push_back(root->val);\n            if (root->right != nullptr) {\n                s1.push(root->right);\n            }\n            if (root->left != nullptr) {\n                s1.push(root->left);\n            }\n        }\n        return bintree;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-preorder-traversal"}