{"id":562502824,"lang":"cpp","time":"4 months, 2 weeks","timestamp":1632851148,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/562502824/","is_pending":"Not Pending","title":"Number of 1 Bits","memory":"6 MB","code":"class Solution {\npublic:\n    int hammingWeight(uint32_t n) {\n        /*\n        we check if the bit in the ones place is a 1 \n        \n        if we take the n & 1 everytime and check if the result of that \n        is equal to one, we have a one so we can update the counter \n        \n        we keep rightshifting n until it is all zeros \n        \n        \n        */\n        int count = 0;\n        \n        for (int i = 0; i < 32; i++) {\n            if ((n & 1) == 1) {\n                ++count;\n            }\n            n >>= 1;\n        }\n        return count;\n        \n    }\n};","compare_resulttitle_slug":"number-of-1-bits"}