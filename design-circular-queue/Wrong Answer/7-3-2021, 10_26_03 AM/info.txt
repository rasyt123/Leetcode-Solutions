{"id":516852469,"lang":"cpp","time":"7 months, 1 week","timestamp":1625333163,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/516852469/","is_pending":"Not Pending","title":"Design Circular Queue","memory":"N/A","code":"class MyCircularQueue {\nprivate:\n    int* arr;\n    int numelements;\n    int size = 0;\n    int frontindex = 0;\n    int backindex = 0;\n\npublic:\n    MyCircularQueue(int k) {\n        arr = new int[k];\n        numelements = k;\n    }\n    bool enQueue(int value) {\n        if (size == numelements) {\n            return false;\n        }\n        else if (backindex == numelements - 1 or size == 0) {\n            backindex = 0;\n            arr[backindex] = value;\n            ++size;\n            return true;\n        } else {\n            ++backindex;\n            arr[backindex] = value;\n            ++size;\n            return true;\n        }\n    }\n\n    bool deQueue() {\n        if (isEmpty()) {\n            return false;\n        } else if (frontindex == numelements - 1) {\n            arr[frontindex] = 0;\n            frontindex = 0;\n            --size;\n            return true;\n        } else {\n            arr[frontindex] = 0;\n            ++frontindex;\n            --size;\n            return true;\n        }\n\n    }\n\n    int Front() {\n        if (isEmpty()) {\n            return -1;\n        } else {\n            return arr[frontindex];\n        }\n  \n    }\n\n    int Rear() {\n        if (isEmpty()) {\n            return -1;\n        } else {\n            return arr[backindex];\n        }\n    }\n\n    bool isEmpty() {\n        if (size == 0) {\n            return true;\n        } else {\n            return false;\n        }\n\n    }\n\n    bool isFull() {\n        if (size == numelements) {\n            return true;\n        } else {\n            return false;\n        }\n\n\n    }\n};\n\n/**\n * Your MyCircularQueue object will be instantiated and called as such:\n * MyCircularQueue* obj = new MyCircularQueue(k);\n * bool param_1 = obj->enQueue(value);\n * bool param_2 = obj->deQueue();\n * int param_3 = obj->Front();\n * int param_4 = obj->Rear();\n * bool param_5 = obj->isEmpty();\n * bool param_6 = obj->isFull();\n */","compare_result":"111111111111110101001110111100111000101001100101110001110","title_slug":"design-circular-queue"}