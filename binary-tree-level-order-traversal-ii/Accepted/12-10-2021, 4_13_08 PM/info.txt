{"id":600000843,"lang":"cpp","time":"2Â months","timestamp":1639181588,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/600000843/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal II","memory":"12.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> levelOrderBottom(TreeNode* root) {\n        /*\n        perform regular level order traversal and then \n        reverse the result \n        */\n        if (root == nullptr) {\n            return {};\n        }\n        \n        queue<TreeNode*> q1;\n        q1.push(root);\n        vector<vector<int>> levelresult;\n        while (!q1.empty()) {\n            int size = q1.size();\n            vector<int> currlevel;\n            for (int i = 0; i < size; i++) {\n                TreeNode* curr = q1.front();\n                currlevel.push_back(curr->val);\n                q1.pop();\n                if (curr->left != nullptr) {\n                    q1.push(curr->left);\n                }\n                if (curr->right != nullptr) {\n                    q1.push(curr->right);\n                }\n            }\n            levelresult.push_back(currlevel);\n        }\n        reverse(levelresult.begin(), levelresult.end());\n        return levelresult;\n    }\n                \n    \n};","compare_result":"1111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal-ii"}