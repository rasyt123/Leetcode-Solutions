{"id":547397751,"lang":"cpp","time":"5 months, 1 week","timestamp":1630436676,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/547397751/","is_pending":"Not Pending","title":"Permutation in String","memory":"N/A","code":"class Solution {\npublic:\n    bool checkInclusion(string s1, string s2) {\n        /*\n        We can use a fixed sliding window approach. In each portion of the window, we can \n        create a copy of the window string and sort it and compare it to see if s1 is the same \n        as the copied string.\n        \n        */\n    \tsort(s1.begin(), s1.end());\n    \tint windowstart = 0;\n    \tint k = s1.size();\n    \tstring perm;\n    \tfor (int windowend = 0; windowend < s2.size(); windowend++) {\n    \t\tif (windowend - windowstart + 1 == k) {\n    \t\t\t//Create a copy substring here\n    \t\t\tperm = s2.substr(windowstart, k);\n                sort(perm.begin(), perm.end());\n    \t\t\tif (perm == s1) {\n    \t\t\t\treturn true;\n    \t\t\t}\n    \t\t\t++windowstart;\n    \t\t}\n    \t}\n    \treturn false;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111110000000000000000000000000","title_slug":"permutation-in-string"}