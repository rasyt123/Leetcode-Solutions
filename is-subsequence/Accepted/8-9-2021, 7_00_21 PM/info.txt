{"id":536039175,"lang":"cpp","time":"6Â months","timestamp":1628560821,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/536039175/","is_pending":"Not Pending","title":"Is Subsequence","memory":"6.2 MB","code":"class Solution {\npublic:\n    bool isSubsequence(string s, string t) {\n\n\n        /*\n\n        s = \"ahgd\"\n             L  R\n\n             \"afzg\"\n               LR\n\n\n              \"abc\"\n                L\n                R\n        have and L and R for both s and t\n        when the value at both left pointers are equal, shift both s's and l's left pointer to the\n        right\n        if the left pointer of t is not equal to the L pointer of S, shift t's pointer to the right but\n        not s's pointer\n\n\n        when the value at both right pointrs are equal, shift both s's and l's right pointer to the\n        left. if the right pointers of t is not equal to the right pointer of S, shift t's pointer to left\n\n\n        if t's left and right pointers cross\n        we should return false\n        t = \"ahbgdc\"\n               L\n               R \"doesnt exist \"\n               Should return false inside of the subesqeunce\n\n\n        return true\n\n        */\n        int sl, sr;\n        int tl, tr;\n\n        sl = 0;\n        sr = s.size() - 1;\n\n        tl = 0;\n        tr = t.size() - 1;\n\n        while (sl <= sr) {\n            if (tl > tr) {\n                return false;\n            }\n\n            if (s[sl] == t[tl]) {\n                ++sl;\n                ++tl;\n            } else if (s[sl] != t[tl]) {\n                ++tl;\n            }\n\n            if (s[sr] == t[tr]) {\n                --sr;\n                --tr;\n            } else if (s[sr] != t[tr]) {\n                --tr;\n            }\n\n        }\n\n        return true;\n\n\n\n\n\n    }\n};","compare_result":"11111111111111111","title_slug":"is-subsequence"}