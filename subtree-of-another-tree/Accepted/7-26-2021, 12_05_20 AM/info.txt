{"id":528456633,"lang":"cpp","time":"6 months, 2 weeks","timestamp":1627283120,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/528456633/","is_pending":"Not Pending","title":"Subtree of Another Tree","memory":"28.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\n\nclass Solution {\npublic:\n    bool isSubtree(TreeNode* s, TreeNode* t) {\n        \n        if(!s) \n            return false;\n        if (isSame(s,t)) \n            return true;\n        \n        return isSubtree(s->left,t) || isSubtree(s->right,t);\n        \n    }\n    bool isSame(TreeNode *s, TreeNode *t)\n    {\n        if (!s && !t)\n            return true;\n        if (!s || !t) \n            return false;\n        if (s->val != t->val) \n            return false;\n        \n        return isSame(s->left, t->left) && isSame(s->right, t->right);\n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"subtree-of-another-tree"}