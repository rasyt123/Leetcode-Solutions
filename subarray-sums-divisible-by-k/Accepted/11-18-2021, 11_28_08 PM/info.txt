{"id":589481489,"lang":"cpp","time":"2 months, 3 weeks","timestamp":1637306888,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/589481489/","is_pending":"Not Pending","title":"Subarray Sums Divisible by K","memory":"30.2 MB","code":"class Solution {\npublic:\n    int subarraysDivByK(vector<int>& A, int K) {\n\n        int pref = 0; // prefix sum\n        vector<int> cPref(K); //sum will not exceed K as we are taking modulo at every step\n        cPref[pref]++; // adding 0 as prefix sum, base case\n        \n        int answer = 0; // count of number of subarrays whose sum is divisible by K\n        \n        for(int i = 0; i < A.size(); i++) {\n            \n            pref = (pref + A[i]) % K; // Here, we take modulo of prefix sum as outlined in the explanation\n            \n            if(pref < 0) pref += K; // since -1 mod 5 and 4 mod 5 are equivalent, we will keep only positives since we like them :)\n                        \n            answer += cPref[pref]; // if we have already found pref, then increase the answer count\n            \n            cPref[pref]++; // add pref seen count by 1\n        }\n        \n        return answer;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"subarray-sums-divisible-by-k"}