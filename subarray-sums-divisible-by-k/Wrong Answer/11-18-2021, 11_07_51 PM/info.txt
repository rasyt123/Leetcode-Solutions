{"id":589473273,"lang":"cpp","time":"2 months, 3 weeks","timestamp":1637305671,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/589473273/","is_pending":"Not Pending","title":"Subarray Sums Divisible by K","memory":"N/A","code":"class Solution {\npublic:\n    int subarraysDivByK(vector<int>& nums, int k) {\n        /*\n        Sliding window or some prefix sum problem \n        \n        Prefix Sum::\n        \n        [4, 9, 9, 7, 4, 5]\n        counter = 0\n        \n        check if the sum mod k is equal to zero \n        for each element in the modified prefix sum array:\n            currsum = current elemtn\n            if sum % k == 0:\n                counter += 1;\n            for (int i = 0; i <= element of modified prefux; i++)\n                subtract current element from currsum \n                if sum % k == 0:\n                    counter += 1:\n        */\n        int count = 0;\n        for (int i = 1; i < nums.size(); i++) {\n            nums[i] = nums[i - 1] + nums[i];\n        }\n        for (int i = 0; i < nums.size(); i++) {\n            int currsum = nums[i];\n            if (currsum % k == 0) {\n                count += 1;\n            }\n            for (int j = 0; j < i; j++) {\n                currsum -= nums[j];\n                if (currsum % k == 0) {\n                    count += 1;\n                }\n                \n            }\n        }\n        return count;\n    }\n};","compare_result":"0111111111101100101100010100000110011111111000100100000010000000001000000","title_slug":"subarray-sums-divisible-by-k"}