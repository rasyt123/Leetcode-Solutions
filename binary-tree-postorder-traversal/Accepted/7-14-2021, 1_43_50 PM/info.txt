{"id":522621393,"lang":"cpp","time":"7Â months","timestamp":1626295430,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/522621393/","is_pending":"Not Pending","title":"Binary Tree Postorder Traversal","memory":"8.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> postorderTraversal(TreeNode* root) {\n       vector<int> nodevalues;\n       helper(root, nodevalues);\n       return nodevalues;\n    }\n    void helper(TreeNode* root, vector<int>& nodevals) {\n        if (root == nullptr) {\n            return;\n        }\n        helper(root->left, nodevals);\n        helper(root->right, nodevals);\n        nodevals.push_back(root->val);\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-postorder-traversal"}