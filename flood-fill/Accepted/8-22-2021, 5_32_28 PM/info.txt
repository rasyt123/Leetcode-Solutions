{"id":542641414,"lang":"cpp","time":"5 months, 3 weeks","timestamp":1629678748,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/542641414/","is_pending":"Not Pending","title":"Flood Fill","memory":"14.5 MB","code":"class Solution {\npublic:\n    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int newColor) {\n        vector<vector<bool>> marked(image.size(), vector<bool>(image[0].size(), false));\n        bfs(image, sr, sc, marked, newColor);\n        return image;\n    }\n\n\n    void bfs(vector<vector<int>>& image, int startrow, int startcol, vector<vector<bool>>& marked, int newColor) {\n        queue<pair<int, int>> processn;\n        vector<pair<int, int>> neighbors;\n        pair<int, int> nextnode;\n        processn.push({startrow, startcol});\n        while (!processn.empty()) {\n            nextnode = processn.front();\n            processn.pop();\n            int row = nextnode.first;\n            int col = nextnode.second;\n            int oldcolor = image[row][col];\n            if (!marked[row][col]) {\n                image[row][col] = newColor;\n                marked[row][col] = true;\n                neighbors = buildneighbors(row, col);\n                for (pair<int, int> w : neighbors) {\n                    if (isValid(w.first, w.second, image) and !marked[w.first][w.second] and image[w.first][w.second] == oldcolor) {\n                        processn.push(w);\n                    }\n                }\n            }\n\n        }\n\n    }\n\n     vector<pair<int, int>> buildneighbors(int currow, int currcol) {\n            vector<pair<int, int>> neighbors;\n            int north = currow - 1;\n            int south = currow + 1;\n            int west = currcol - 1;\n            int east = currcol + 1;\n            neighbors = {{north, currcol}, {south, currcol}, {currow, west}, {currow, east}};\n            return neighbors;\n         }\n\n\n        bool isValid(int row, int col, vector<vector<int>>& image) {\n            return (row >= 0 and row < image.size()) and (col >= 0 and col < image.at(0).size());\n        }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"flood-fill"}