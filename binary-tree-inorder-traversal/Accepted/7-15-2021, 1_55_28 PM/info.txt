{"id":523140639,"lang":"cpp","time":"7Â months","timestamp":1626382528,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/523140639/","is_pending":"Not Pending","title":"Binary Tree Inorder Traversal","memory":"8.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> inorderTraversal(TreeNode* root) {\n        vector<int> bigtree;\n        inorder(root, bigtree);\n        return bigtree;\n    }\n    \n    void inorder(TreeNode* root, vector<int>& bigtree) {\n        if (root == nullptr) {\n            return;\n        }\n        inorder(root->left, bigtree);\n        bigtree.push_back(root->val);\n        inorder(root->right, bigtree);\n\n    }\n    \n    \n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-inorder-traversal"}