{"id":537118475,"lang":"cpp","time":"6Â months","timestamp":1628733952,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/537118475/","is_pending":"Not Pending","title":"Valid Palindrome","memory":"N/A","code":"class Solution {\npublic:\n    bool isPalindrome(string s) {\n        /*In a palindrome, the string is reversed but the string values are both the same on both ends of a string except\n        for the middle character. We can place a left and right pointer at both ends of the string s, with l being at 0 and r being at\n        r - 1;\n\n        the moment s[l] and s[r] are not equal, we should return false;\n\n        When both characters are equal, shift the left pointer to the right and the right pointer to the left\n        once we get to the center, and  l and r are equivalent to each other, we have\n\n\n        standard method is to reverse the string and then check if it is a palindrome, but this method takes more time\n        than the two pointer solution.\n\n\n        */\n\n\n        int l = 0;\n        int r = s.size() - 1;\n        bool skipalpha = !((s[l] >= 97 and s[l] <= 122) or (s[l] >= 48 and s[l] <= 57));\n        bool skipalpha2 =  !((s[r] >= 97 and s[r] <= 122) or (s[r] >= 48 and s[r] <= 57));\n        while (l < r) {\n            s[l] = tolower(s[l]);\n            s[r] = tolower(s[r]);\n            while (!isalnum(s[l]) and l < s.size() - 1) {\n                ++l;\n            }\n            while (!isalnum(s[r]) and r > 0) {\n                --r;\n            }\n\n\n            if(s[l] == s[r] or (!isalnum(s[l])) and !isalnum(s[r])) {\n                ++l;\n                --r;\n            } else {\n                return false;\n            }\n        }\n        return true;\n\n    }\n};","compare_result":"111111111111111111111111111111101111001010101110000101101101000011010101001001110100001001100010000010100111011110100010010111000111011010100001101110110000000010010011101001111100100111011011010011101000010101101111011001111001011010111001100010001000010011001001001100110110010011011110100001111001000010000100111001001011001000010110001001101000011000111100011101000011101111111111111111111111111111111111111111111111111011111111111111111111111111111111111111111111111111111110","title_slug":"valid-palindrome"}