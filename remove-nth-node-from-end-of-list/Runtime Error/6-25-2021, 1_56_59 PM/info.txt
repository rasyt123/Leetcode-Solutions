{"id":513164312,"lang":"cpp","time":"7 months, 2 weeks","timestamp":1624654619,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/513164312/","is_pending":"Not Pending","title":"Remove Nth Node From End of List","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* removeNthFromEnd(ListNode* head, int n) {\n        ListNode* start = head;\n        ListNode* NthEnd;\n        ListNode* temp;\n        int size = 0;\n        int prevn;\n        while (start != nullptr) {\n            ++size;\n            start = start->next;\n        }\n        if (size == 1 and n == 1) {\n            free(head);\n            head = nullptr;\n            return head;\n        } else {\n             start = head;\n             prevn = size - n - 1;\n             if (size - n == 0) {\n                head = start->next;\n                start->next = nullptr;\n                return head;\n             } else if (size - n == size - 1) {\n                 prevn = size - 2;\n                 while (prevn--) {\n                     start = start->next;\n                 }\n                 temp = start->next;\n                 start->next = nullptr;\n                 return head;\n             } else {\n                 while (prevn--) {\n                     start = start->next;\n                 }\n                 start->next = start->next->next;\n                 return head;\n             }\n        }\n\n\n    }\n};","compare_result":"1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"remove-nth-node-from-end-of-list"}