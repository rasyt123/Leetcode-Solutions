{"id":593093021,"lang":"cpp","time":"2 months, 2 weeks","timestamp":1637958605,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/593093021/","is_pending":"Not Pending","title":"Reverse Linked List II","memory":"7.3 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* reverseBetween(ListNode* head, int left, int right) {\n        ListNode* curr = head;\n        ListNode* startprev = nullptr;\n        ListNode* endafter = nullptr;\n        ListNode* temp;\n        ListNode* prev = nullptr;\n        ListNode* tail;\n        int pos = 1;\n        if (left == right) {\n            return head;\n        }\n        while (curr != nullptr and pos <= right + 1) {\n            if (pos == left - 1) {\n                startprev = curr;\n            }\n            if (pos == right + 1) {\n                endafter = curr;\n            }\n            if (pos >= left and pos <= right) {\n                if (pos == left) {\n                    tail = curr;\n                }\n                temp = curr->next;\n                curr->next = prev;\n                prev = curr;\n                curr = temp;\n                pos += 1;\n            } else {\n                pos += 1;\n                curr = curr->next;\n            }\n        }\n        tail->next = endafter;\n        if (startprev == nullptr) {\n           return prev;\n        }\n        startprev->next = prev;\n        if (left > 1) {\n            return head;\n        }\n        return startprev;\n    \n    }\n};","compare_result":"11111111111111111111111111111111111111111111","title_slug":"reverse-linked-list-ii"}